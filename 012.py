#!/usr/bin/python2

# The sequence of triangle numbers is generated by adding the natural numbers. So the
# 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms
# would be:

#    1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

# Let us list the factors of the first seven triangle numbers:

#    1: 1 3: 1,3 6: 1,2,3,6 10: 1,2,5,10 15: 1,3,5,15 21: 1,3,7,21 28: 1,2,4,7,14,28

# We can see that 28 is the first triangle number to have over five divisors.

# What is the value of the first triangle number to have over five hundred divisors?

# Answer: 76576500


# TODO: use the 'number of divisors' formula
step = 0
triangle = 0

while True:
    step += 1
    triangle += step

    cnt = 0

    lim = int(triangle**0.5)
    if triangle == lim*lim:
        cnt -= 1

    for i in xrange(1, lim + 1):
        if triangle % i == 0:
            cnt += 2
            if cnt > 500:
                print triangle
                exit()
